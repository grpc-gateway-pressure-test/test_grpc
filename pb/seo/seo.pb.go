// Code generated by protoc-gen-go. DO NOT EDIT.
// source: seo.proto

/*
Package seo is a generated protocol buffer package.

It is generated from these files:
	seo.proto

It has these top-level messages:
	RoomSeoReq
	CateSeoReq
	SeoRes
	SeoInfo
*/
package seo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 获取房间seo Req
type RoomSeoReq struct {
	RoomID uint32 `protobuf:"varint,1,opt,name=roomID" json:"roomID,omitempty"`
}

func (m *RoomSeoReq) Reset()                    { *m = RoomSeoReq{} }
func (m *RoomSeoReq) String() string            { return proto.CompactTextString(m) }
func (*RoomSeoReq) ProtoMessage()               {}
func (*RoomSeoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RoomSeoReq) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

// 获取分类seo Req
type CateSeoReq struct {
	CateType uint32 `protobuf:"varint,1,opt,name=cateType" json:"cateType,omitempty"`
	CateID   uint32 `protobuf:"varint,2,opt,name=cateID" json:"cateID,omitempty"`
}

func (m *CateSeoReq) Reset()                    { *m = CateSeoReq{} }
func (m *CateSeoReq) String() string            { return proto.CompactTextString(m) }
func (*CateSeoReq) ProtoMessage()               {}
func (*CateSeoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CateSeoReq) GetCateType() uint32 {
	if m != nil {
		return m.CateType
	}
	return 0
}

func (m *CateSeoReq) GetCateID() uint32 {
	if m != nil {
		return m.CateID
	}
	return 0
}

// 获取seo Res
type SeoRes struct {
	Code    int32    `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *SeoInfo `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *SeoRes) Reset()                    { *m = SeoRes{} }
func (m *SeoRes) String() string            { return proto.CompactTextString(m) }
func (*SeoRes) ProtoMessage()               {}
func (*SeoRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SeoRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SeoRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SeoRes) GetData() *SeoInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

// seo 内容
type SeoInfo struct {
	Title       string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Keyword     string `protobuf:"bytes,2,opt,name=keyword" json:"keyword,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *SeoInfo) Reset()                    { *m = SeoInfo{} }
func (m *SeoInfo) String() string            { return proto.CompactTextString(m) }
func (*SeoInfo) ProtoMessage()               {}
func (*SeoInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SeoInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SeoInfo) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *SeoInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*RoomSeoReq)(nil), "pb.roomSeoReq")
	proto.RegisterType((*CateSeoReq)(nil), "pb.cateSeoReq")
	proto.RegisterType((*SeoRes)(nil), "pb.seoRes")
	proto.RegisterType((*SeoInfo)(nil), "pb.seoInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SeoService service

type SeoServiceClient interface {
	// 获取房间seo信息
	GetRoomSeo(ctx context.Context, in *RoomSeoReq, opts ...grpc.CallOption) (*SeoRes, error)
	// 获取分类seo信息
	GetCateSeo(ctx context.Context, in *CateSeoReq, opts ...grpc.CallOption) (*SeoRes, error)
}

type seoServiceClient struct {
	cc *grpc.ClientConn
}

func NewSeoServiceClient(cc *grpc.ClientConn) SeoServiceClient {
	return &seoServiceClient{cc}
}

func (c *seoServiceClient) GetRoomSeo(ctx context.Context, in *RoomSeoReq, opts ...grpc.CallOption) (*SeoRes, error) {
	out := new(SeoRes)
	err := grpc.Invoke(ctx, "/pb.seoService/getRoomSeo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *seoServiceClient) GetCateSeo(ctx context.Context, in *CateSeoReq, opts ...grpc.CallOption) (*SeoRes, error) {
	out := new(SeoRes)
	err := grpc.Invoke(ctx, "/pb.seoService/getCateSeo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SeoService service

type SeoServiceServer interface {
	// 获取房间seo信息
	GetRoomSeo(context.Context, *RoomSeoReq) (*SeoRes, error)
	// 获取分类seo信息
	GetCateSeo(context.Context, *CateSeoReq) (*SeoRes, error)
}

func RegisterSeoServiceServer(s *grpc.Server, srv SeoServiceServer) {
	s.RegisterService(&_SeoService_serviceDesc, srv)
}

func _SeoService_GetRoomSeo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomSeoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeoServiceServer).GetRoomSeo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.seoService/GetRoomSeo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeoServiceServer).GetRoomSeo(ctx, req.(*RoomSeoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SeoService_GetCateSeo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CateSeoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeoServiceServer).GetCateSeo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.seoService/GetCateSeo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeoServiceServer).GetCateSeo(ctx, req.(*CateSeoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SeoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.seoService",
	HandlerType: (*SeoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getRoomSeo",
			Handler:    _SeoService_GetRoomSeo_Handler,
		},
		{
			MethodName: "getCateSeo",
			Handler:    _SeoService_GetCateSeo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "seo.proto",
}

func init() { proto.RegisterFile("seo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x4d, 0x4b, 0xf3, 0x50,
	0x10, 0x85, 0xdf, 0xb4, 0x4d, 0xfa, 0x66, 0x82, 0x2e, 0x06, 0x91, 0xd0, 0x8d, 0x21, 0xb8, 0x28,
	0x2e, 0xb2, 0xa8, 0x7f, 0x40, 0xb4, 0x9b, 0x6c, 0x6f, 0x05, 0x41, 0x57, 0xf9, 0x18, 0x4b, 0xd0,
	0x76, 0xe2, 0x9d, 0x8b, 0xd2, 0x7f, 0x2f, 0xf7, 0xa3, 0x56, 0x77, 0xf3, 0x4c, 0xce, 0x39, 0x19,
	0xce, 0x85, 0x54, 0x88, 0xab, 0x51, 0xb3, 0x61, 0x9c, 0x8c, 0x6d, 0x79, 0x0d, 0xa0, 0x99, 0x77,
	0x1b, 0x62, 0x45, 0x1f, 0x78, 0x09, 0x89, 0xa5, 0x7a, 0x9d, 0x47, 0x45, 0xb4, 0x3c, 0x53, 0x81,
	0xca, 0x3b, 0x80, 0xae, 0x31, 0x14, 0x54, 0x0b, 0xf8, 0x6f, 0xe9, 0xf1, 0x30, 0x52, 0xd0, 0xfd,
	0xb0, 0x4d, 0xb0, 0x73, 0xbd, 0xce, 0x27, 0x3e, 0xc1, 0x53, 0xf9, 0x04, 0x89, 0x58, 0xb7, 0x20,
	0xc2, 0xac, 0xe3, 0xde, 0x3b, 0x63, 0xe5, 0x66, 0xcc, 0x61, 0xbe, 0x23, 0x91, 0x66, 0x4b, 0xce,
	0x96, 0xaa, 0x23, 0xe2, 0x15, 0xcc, 0xfa, 0xc6, 0x34, 0xf9, 0xb4, 0x88, 0x96, 0xd9, 0x2a, 0xab,
	0xc6, 0xb6, 0x12, 0xe2, 0x7a, 0xff, 0xca, 0xca, 0x7d, 0x28, 0x5f, 0x60, 0x1e, 0x16, 0x78, 0x01,
	0xb1, 0x19, 0xcc, 0xbb, 0x8f, 0x4e, 0x95, 0x07, 0x9b, 0xfd, 0x46, 0x87, 0x2f, 0xd6, 0xfd, 0x31,
	0x3b, 0x20, 0x16, 0x90, 0xf5, 0x24, 0x9d, 0x1e, 0x46, 0x33, 0xf0, 0xde, 0xfd, 0x22, 0x55, 0xbf,
	0x57, 0xab, 0x1e, 0x40, 0x88, 0x37, 0xa4, 0x3f, 0x87, 0x8e, 0xf0, 0x06, 0x60, 0x4b, 0x46, 0xf9,
	0xba, 0xf0, 0xdc, 0xde, 0x72, 0xea, 0x6e, 0x01, 0xe1, 0x36, 0x45, 0x52, 0xfe, 0x0b, 0xda, 0x07,
	0x5f, 0x9a, 0xd7, 0x9e, 0x1a, 0xfc, 0xab, 0xbd, 0x8f, 0x9f, 0xa7, 0x42, 0xdc, 0x26, 0xee, 0x55,
	0x6e, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x6a, 0x3f, 0x6a, 0xa2, 0x01, 0x00, 0x00,
}
