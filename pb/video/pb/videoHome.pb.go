// Code generated by protoc-gen-go. DO NOT EDIT.
// source: videoHome.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// list request type
type ListReq struct {
	Vids []uint64 `protobuf:"varint,1,rep,packed,name=vids" json:"vids,omitempty"`
}

func (m *ListReq) Reset()                    { *m = ListReq{} }
func (m *ListReq) String() string            { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()               {}
func (*ListReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ListReq) GetVids() []uint64 {
	if m != nil {
		return m.Vids
	}
	return nil
}

// info request type
type InfoReq struct {
	Vid    uint64 `protobuf:"varint,1,opt,name=vid" json:"vid,omitempty"`
	Master bool   `protobuf:"varint,2,opt,name=master,json=is_master" json:"master,omitempty"`
}

func (m *InfoReq) Reset()                    { *m = InfoReq{} }
func (m *InfoReq) String() string            { return proto.CompactTextString(m) }
func (*InfoReq) ProtoMessage()               {}
func (*InfoReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *InfoReq) GetVid() uint64 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *InfoReq) GetMaster() bool {
	if m != nil {
		return m.Master
	}
	return false
}

// uidinfo request type
type UidInfoReq struct {
	Uid uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *UidInfoReq) Reset()                    { *m = UidInfoReq{} }
func (m *UidInfoReq) String() string            { return proto.CompactTextString(m) }
func (*UidInfoReq) ProtoMessage()               {}
func (*UidInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *UidInfoReq) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// vidinfo request type
type VidInfoReq struct {
	Vid uint64 `protobuf:"varint,1,opt,name=vid" json:"vid,omitempty"`
}

func (m *VidInfoReq) Reset()                    { *m = VidInfoReq{} }
func (m *VidInfoReq) String() string            { return proto.CompactTextString(m) }
func (*VidInfoReq) ProtoMessage()               {}
func (*VidInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *VidInfoReq) GetVid() uint64 {
	if m != nil {
		return m.Vid
	}
	return 0
}

// list responce type
type ListRes struct {
	Code    int32                 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string                `protobuf:"bytes,2,opt,name=message,json=msg" json:"message,omitempty"`
	Data    []*VideoUnionListData `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
}

func (m *ListRes) Reset()                    { *m = ListRes{} }
func (m *ListRes) String() string            { return proto.CompactTextString(m) }
func (*ListRes) ProtoMessage()               {}
func (*ListRes) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ListRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListRes) GetData() []*VideoUnionListData {
	if m != nil {
		return m.Data
	}
	return nil
}

// info responce type
type InfoRes struct {
	Code    int32           `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,json=msg" json:"message,omitempty"`
	Data    *VideoUnionData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *InfoRes) Reset()                    { *m = InfoRes{} }
func (m *InfoRes) String() string            { return proto.CompactTextString(m) }
func (*InfoRes) ProtoMessage()               {}
func (*InfoRes) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *InfoRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *InfoRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *InfoRes) GetData() *VideoUnionData {
	if m != nil {
		return m.Data
	}
	return nil
}

// uidinfo responce type
type UIDInfoRes struct {
	Code    int32    `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,json=msg" json:"message,omitempty"`
	Data    *UIDData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *UIDInfoRes) Reset()                    { *m = UIDInfoRes{} }
func (m *UIDInfoRes) String() string            { return proto.CompactTextString(m) }
func (*UIDInfoRes) ProtoMessage()               {}
func (*UIDInfoRes) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *UIDInfoRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UIDInfoRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UIDInfoRes) GetData() *UIDData {
	if m != nil {
		return m.Data
	}
	return nil
}

type UIDData struct {
	NoReCount   uint32 `protobuf:"varint,1,opt,name=noReCount,json=no_re_count" json:"noReCount,omitempty"`
	ReplayCount uint32 `protobuf:"varint,2,opt,name=replayCount,json=replay_count" json:"replayCount,omitempty"`
	Uid         uint32 `protobuf:"varint,3,opt,name=uid" json:"uid,omitempty"`
	UploadTime  uint32 `protobuf:"varint,4,opt,name=uploadTime,json=upload_time" json:"uploadTime,omitempty"`
	Vcount      uint32 `protobuf:"varint,5,opt,name=vcount" json:"vcount,omitempty"`
}

func (m *UIDData) Reset()                    { *m = UIDData{} }
func (m *UIDData) String() string            { return proto.CompactTextString(m) }
func (*UIDData) ProtoMessage()               {}
func (*UIDData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *UIDData) GetNoReCount() uint32 {
	if m != nil {
		return m.NoReCount
	}
	return 0
}

func (m *UIDData) GetReplayCount() uint32 {
	if m != nil {
		return m.ReplayCount
	}
	return 0
}

func (m *UIDData) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UIDData) GetUploadTime() uint32 {
	if m != nil {
		return m.UploadTime
	}
	return 0
}

func (m *UIDData) GetVcount() uint32 {
	if m != nil {
		return m.Vcount
	}
	return 0
}

// vidinfores vidinfo responce type
type VIDInfoRes struct {
	Code    int32    `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,json=msg" json:"message,omitempty"`
	Data    *VIDData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *VIDInfoRes) Reset()                    { *m = VIDInfoRes{} }
func (m *VIDInfoRes) String() string            { return proto.CompactTextString(m) }
func (*VIDInfoRes) ProtoMessage()               {}
func (*VIDInfoRes) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *VIDInfoRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *VIDInfoRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *VIDInfoRes) GetData() *VIDData {
	if m != nil {
		return m.Data
	}
	return nil
}

type VIDData struct {
	Cid1       uint32 `protobuf:"varint,1,opt,name=cid1" json:"cid1,omitempty"`
	Cid2       uint32 `protobuf:"varint,2,opt,name=cid2" json:"cid2,omitempty"`
	Ctime      uint32 `protobuf:"varint,3,opt,name=ctime" json:"ctime,omitempty"`
	IsFirst    uint32 `protobuf:"varint,4,opt,name=isFirst,json=is_first" json:"isFirst,omitempty"`
	IsReAudit  uint32 `protobuf:"varint,5,opt,name=isReAudit,json=is_re_audit" json:"isReAudit,omitempty"`
	IsReplay   uint32 `protobuf:"varint,6,opt,name=isReplay,json=is_replay" json:"isReplay,omitempty"`
	IsShort    uint32 `protobuf:"varint,7,opt,name=isShort,json=is_short" json:"isShort,omitempty"`
	IsVertical uint32 `protobuf:"varint,8,opt,name=isVertical,json=is_vertical" json:"isVertical,omitempty"`
	Status     uint32 `protobuf:"varint,9,opt,name=status" json:"status,omitempty"`
	TopicID    uint32 `protobuf:"varint,10,opt,name=topicID,json=topic_id" json:"topicID,omitempty"`
	Uid        uint32 `protobuf:"varint,11,opt,name=uid" json:"uid,omitempty"`
	Utime      uint32 `protobuf:"varint,12,opt,name=utime" json:"utime,omitempty"`
	VideoType  uint32 `protobuf:"varint,13,opt,name=videoType,json=video_type" json:"videoType,omitempty"`
	Vid        uint64 `protobuf:"varint,14,opt,name=vid" json:"vid,omitempty"`
}

func (m *VIDData) Reset()                    { *m = VIDData{} }
func (m *VIDData) String() string            { return proto.CompactTextString(m) }
func (*VIDData) ProtoMessage()               {}
func (*VIDData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *VIDData) GetCid1() uint32 {
	if m != nil {
		return m.Cid1
	}
	return 0
}

func (m *VIDData) GetCid2() uint32 {
	if m != nil {
		return m.Cid2
	}
	return 0
}

func (m *VIDData) GetCtime() uint32 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *VIDData) GetIsFirst() uint32 {
	if m != nil {
		return m.IsFirst
	}
	return 0
}

func (m *VIDData) GetIsReAudit() uint32 {
	if m != nil {
		return m.IsReAudit
	}
	return 0
}

func (m *VIDData) GetIsReplay() uint32 {
	if m != nil {
		return m.IsReplay
	}
	return 0
}

func (m *VIDData) GetIsShort() uint32 {
	if m != nil {
		return m.IsShort
	}
	return 0
}

func (m *VIDData) GetIsVertical() uint32 {
	if m != nil {
		return m.IsVertical
	}
	return 0
}

func (m *VIDData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *VIDData) GetTopicID() uint32 {
	if m != nil {
		return m.TopicID
	}
	return 0
}

func (m *VIDData) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *VIDData) GetUtime() uint32 {
	if m != nil {
		return m.Utime
	}
	return 0
}

func (m *VIDData) GetVideoType() uint32 {
	if m != nil {
		return m.VideoType
	}
	return 0
}

func (m *VIDData) GetVid() uint64 {
	if m != nil {
		return m.Vid
	}
	return 0
}

type VideoUnionData struct {
	Vid           uint64  `protobuf:"varint,1,opt,name=vid" json:"vid,omitempty"`
	Cid1          uint32  `protobuf:"varint,2,opt,name=cid1" json:"cid1,omitempty"`
	Cid2          uint32  `protobuf:"varint,3,opt,name=cid2" json:"cid2,omitempty"`
	Uid           uint32  `protobuf:"varint,4,opt,name=uid" json:"uid,omitempty"`
	Status        uint32  `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	IsReAudit     uint32  `protobuf:"varint,6,opt,name=isReAudit,json=is_re_audit" json:"isReAudit,omitempty"`
	IsReplay      uint32  `protobuf:"varint,7,opt,name=isReplay,json=is_replay" json:"isReplay,omitempty"`
	IsVertical    uint32  `protobuf:"varint,8,opt,name=isVertical,json=is_vertical" json:"isVertical,omitempty"`
	IsShort       uint32  `protobuf:"varint,9,opt,name=isShort,json=is_short" json:"isShort,omitempty"`
	TopicID       uint32  `protobuf:"varint,10,opt,name=topicID,json=topic_id" json:"topicID,omitempty"`
	CreateTime    uint32  `protobuf:"varint,11,opt,name=createTime,json=create_time" json:"createTime,omitempty"`
	UpdateTime    uint32  `protobuf:"varint,12,opt,name=updateTime,json=update_time" json:"updateTime,omitempty"`
	IsFirst       uint32  `protobuf:"varint,13,opt,name=isFirst,json=is_first" json:"isFirst,omitempty"`
	VideoType     uint32  `protobuf:"varint,14,opt,name=videoType,json=video_type" json:"videoType,omitempty"`
	Title         string  `protobuf:"bytes,15,opt,name=title" json:"title,omitempty"`
	VideoPic      string  `protobuf:"bytes,16,opt,name=videoPic,json=video_pic" json:"videoPic,omitempty"`
	WsVideoPic    string  `protobuf:"bytes,17,opt,name=wsVideoPic,json=ws_video_pic" json:"wsVideoPic,omitempty"`
	Contents      string  `protobuf:"bytes,18,opt,name=contents" json:"contents,omitempty"`
	TimePoint     string  `protobuf:"bytes,19,opt,name=timePoint,json=time_point" json:"timePoint,omitempty"`
	VideoDuration float64 `protobuf:"fixed64,20,opt,name=videoDuration,json=video_duration" json:"videoDuration,omitempty"`
	ThumbVideo    string  `protobuf:"bytes,21,opt,name=thumbVideo,json=thumb_video" json:"thumbVideo,omitempty"`
	ViewThumb     string  `protobuf:"bytes,22,opt,name=viewThumb,json=view_thumb" json:"viewThumb,omitempty"`
	PointThumb    string  `protobuf:"bytes,23,opt,name=pointThumb,json=point_thumb" json:"pointThumb,omitempty"`
	Tags          string  `protobuf:"bytes,24,opt,name=tags" json:"tags,omitempty"`
	VerPic        string  `protobuf:"bytes,25,opt,name=verPic,json=ver_pic" json:"verPic,omitempty"`
	Error         string  `protobuf:"bytes,26,opt,name=error" json:"error,omitempty"`
}

func (m *VideoUnionData) Reset()                    { *m = VideoUnionData{} }
func (m *VideoUnionData) String() string            { return proto.CompactTextString(m) }
func (*VideoUnionData) ProtoMessage()               {}
func (*VideoUnionData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *VideoUnionData) GetVid() uint64 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *VideoUnionData) GetCid1() uint32 {
	if m != nil {
		return m.Cid1
	}
	return 0
}

func (m *VideoUnionData) GetCid2() uint32 {
	if m != nil {
		return m.Cid2
	}
	return 0
}

func (m *VideoUnionData) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *VideoUnionData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *VideoUnionData) GetIsReAudit() uint32 {
	if m != nil {
		return m.IsReAudit
	}
	return 0
}

func (m *VideoUnionData) GetIsReplay() uint32 {
	if m != nil {
		return m.IsReplay
	}
	return 0
}

func (m *VideoUnionData) GetIsVertical() uint32 {
	if m != nil {
		return m.IsVertical
	}
	return 0
}

func (m *VideoUnionData) GetIsShort() uint32 {
	if m != nil {
		return m.IsShort
	}
	return 0
}

func (m *VideoUnionData) GetTopicID() uint32 {
	if m != nil {
		return m.TopicID
	}
	return 0
}

func (m *VideoUnionData) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *VideoUnionData) GetUpdateTime() uint32 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *VideoUnionData) GetIsFirst() uint32 {
	if m != nil {
		return m.IsFirst
	}
	return 0
}

func (m *VideoUnionData) GetVideoType() uint32 {
	if m != nil {
		return m.VideoType
	}
	return 0
}

func (m *VideoUnionData) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *VideoUnionData) GetVideoPic() string {
	if m != nil {
		return m.VideoPic
	}
	return ""
}

func (m *VideoUnionData) GetWsVideoPic() string {
	if m != nil {
		return m.WsVideoPic
	}
	return ""
}

func (m *VideoUnionData) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *VideoUnionData) GetTimePoint() string {
	if m != nil {
		return m.TimePoint
	}
	return ""
}

func (m *VideoUnionData) GetVideoDuration() float64 {
	if m != nil {
		return m.VideoDuration
	}
	return 0
}

func (m *VideoUnionData) GetThumbVideo() string {
	if m != nil {
		return m.ThumbVideo
	}
	return ""
}

func (m *VideoUnionData) GetViewThumb() string {
	if m != nil {
		return m.ViewThumb
	}
	return ""
}

func (m *VideoUnionData) GetPointThumb() string {
	if m != nil {
		return m.PointThumb
	}
	return ""
}

func (m *VideoUnionData) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *VideoUnionData) GetVerPic() string {
	if m != nil {
		return m.VerPic
	}
	return ""
}

func (m *VideoUnionData) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type VideoUnionListData struct {
	Vid           uint64  `protobuf:"varint,1,opt,name=vid" json:"vid,omitempty"`
	Cid1          uint32  `protobuf:"varint,2,opt,name=cid1" json:"cid1,omitempty"`
	Cid2          uint32  `protobuf:"varint,3,opt,name=cid2" json:"cid2,omitempty"`
	Uid           uint32  `protobuf:"varint,4,opt,name=uid" json:"uid,omitempty"`
	Status        uint32  `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	IsReAudit     uint32  `protobuf:"varint,6,opt,name=isReAudit,json=is_re_audit" json:"isReAudit,omitempty"`
	IsReplay      uint32  `protobuf:"varint,7,opt,name=isReplay,json=is_replay" json:"isReplay,omitempty"`
	IsVertical    uint32  `protobuf:"varint,8,opt,name=isVertical,json=is_vertical" json:"isVertical,omitempty"`
	IsShort       uint32  `protobuf:"varint,9,opt,name=isShort,json=is_short" json:"isShort,omitempty"`
	TopicID       uint32  `protobuf:"varint,10,opt,name=topicID,json=topic_id" json:"topicID,omitempty"`
	CreateTime    uint32  `protobuf:"varint,11,opt,name=createTime,json=create_time" json:"createTime,omitempty"`
	UpdateTime    uint32  `protobuf:"varint,12,opt,name=updateTime,json=update_time" json:"updateTime,omitempty"`
	IsFirst       uint32  `protobuf:"varint,13,opt,name=isFirst,json=is_first" json:"isFirst,omitempty"`
	VideoType     uint32  `protobuf:"varint,14,opt,name=videoType,json=video_type" json:"videoType,omitempty"`
	Title         string  `protobuf:"bytes,15,opt,name=title" json:"title,omitempty"`
	VideoPic      string  `protobuf:"bytes,16,opt,name=videoPic,json=video_pic" json:"videoPic,omitempty"`
	WsVideoPic    string  `protobuf:"bytes,17,opt,name=wsVideoPic,json=ws_video_pic" json:"wsVideoPic,omitempty"`
	Contents      string  `protobuf:"bytes,18,opt,name=contents" json:"contents,omitempty"`
	TimePoint     string  `protobuf:"bytes,19,opt,name=timePoint,json=time_point" json:"timePoint,omitempty"`
	VideoDuration float64 `protobuf:"fixed64,20,opt,name=videoDuration,json=video_duration" json:"videoDuration,omitempty"`
	PointThumb    string  `protobuf:"bytes,23,opt,name=pointThumb,json=point_thumb" json:"pointThumb,omitempty"`
	Tags          string  `protobuf:"bytes,24,opt,name=tags" json:"tags,omitempty"`
	VerPic        string  `protobuf:"bytes,25,opt,name=verPic,json=ver_pic" json:"verPic,omitempty"`
	Error         string  `protobuf:"bytes,26,opt,name=error" json:"error,omitempty"`
}

func (m *VideoUnionListData) Reset()                    { *m = VideoUnionListData{} }
func (m *VideoUnionListData) String() string            { return proto.CompactTextString(m) }
func (*VideoUnionListData) ProtoMessage()               {}
func (*VideoUnionListData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *VideoUnionListData) GetVid() uint64 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *VideoUnionListData) GetCid1() uint32 {
	if m != nil {
		return m.Cid1
	}
	return 0
}

func (m *VideoUnionListData) GetCid2() uint32 {
	if m != nil {
		return m.Cid2
	}
	return 0
}

func (m *VideoUnionListData) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *VideoUnionListData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *VideoUnionListData) GetIsReAudit() uint32 {
	if m != nil {
		return m.IsReAudit
	}
	return 0
}

func (m *VideoUnionListData) GetIsReplay() uint32 {
	if m != nil {
		return m.IsReplay
	}
	return 0
}

func (m *VideoUnionListData) GetIsVertical() uint32 {
	if m != nil {
		return m.IsVertical
	}
	return 0
}

func (m *VideoUnionListData) GetIsShort() uint32 {
	if m != nil {
		return m.IsShort
	}
	return 0
}

func (m *VideoUnionListData) GetTopicID() uint32 {
	if m != nil {
		return m.TopicID
	}
	return 0
}

func (m *VideoUnionListData) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *VideoUnionListData) GetUpdateTime() uint32 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *VideoUnionListData) GetIsFirst() uint32 {
	if m != nil {
		return m.IsFirst
	}
	return 0
}

func (m *VideoUnionListData) GetVideoType() uint32 {
	if m != nil {
		return m.VideoType
	}
	return 0
}

func (m *VideoUnionListData) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *VideoUnionListData) GetVideoPic() string {
	if m != nil {
		return m.VideoPic
	}
	return ""
}

func (m *VideoUnionListData) GetWsVideoPic() string {
	if m != nil {
		return m.WsVideoPic
	}
	return ""
}

func (m *VideoUnionListData) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *VideoUnionListData) GetTimePoint() string {
	if m != nil {
		return m.TimePoint
	}
	return ""
}

func (m *VideoUnionListData) GetVideoDuration() float64 {
	if m != nil {
		return m.VideoDuration
	}
	return 0
}

func (m *VideoUnionListData) GetPointThumb() string {
	if m != nil {
		return m.PointThumb
	}
	return ""
}

func (m *VideoUnionListData) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *VideoUnionListData) GetVerPic() string {
	if m != nil {
		return m.VerPic
	}
	return ""
}

func (m *VideoUnionListData) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*ListReq)(nil), "pb.ListReq")
	proto.RegisterType((*InfoReq)(nil), "pb.InfoReq")
	proto.RegisterType((*UidInfoReq)(nil), "pb.UidInfoReq")
	proto.RegisterType((*VidInfoReq)(nil), "pb.VidInfoReq")
	proto.RegisterType((*ListRes)(nil), "pb.ListRes")
	proto.RegisterType((*InfoRes)(nil), "pb.InfoRes")
	proto.RegisterType((*UIDInfoRes)(nil), "pb.UIDInfoRes")
	proto.RegisterType((*UIDData)(nil), "pb.UIDData")
	proto.RegisterType((*VIDInfoRes)(nil), "pb.VIDInfoRes")
	proto.RegisterType((*VIDData)(nil), "pb.VIDData")
	proto.RegisterType((*VideoUnionData)(nil), "pb.VideoUnionData")
	proto.RegisterType((*VideoUnionListData)(nil), "pb.VideoUnionListData")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for VideoHome service

type VideoHomeClient interface {
	List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListRes, error)
	Info(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*InfoRes, error)
	UidInfo(ctx context.Context, in *UidInfoReq, opts ...grpc.CallOption) (*UIDInfoRes, error)
	VidInfo(ctx context.Context, in *VidInfoReq, opts ...grpc.CallOption) (*VIDInfoRes, error)
}

type videoHomeClient struct {
	cc *grpc.ClientConn
}

func NewVideoHomeClient(cc *grpc.ClientConn) VideoHomeClient {
	return &videoHomeClient{cc}
}

func (c *videoHomeClient) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListRes, error) {
	out := new(ListRes)
	err := grpc.Invoke(ctx, "/pb.videoHome/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoHomeClient) Info(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*InfoRes, error) {
	out := new(InfoRes)
	err := grpc.Invoke(ctx, "/pb.videoHome/Info", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoHomeClient) UidInfo(ctx context.Context, in *UidInfoReq, opts ...grpc.CallOption) (*UIDInfoRes, error) {
	out := new(UIDInfoRes)
	err := grpc.Invoke(ctx, "/pb.videoHome/UidInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoHomeClient) VidInfo(ctx context.Context, in *VidInfoReq, opts ...grpc.CallOption) (*VIDInfoRes, error) {
	out := new(VIDInfoRes)
	err := grpc.Invoke(ctx, "/pb.videoHome/VidInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for VideoHome service

type VideoHomeServer interface {
	List(context.Context, *ListReq) (*ListRes, error)
	Info(context.Context, *InfoReq) (*InfoRes, error)
	UidInfo(context.Context, *UidInfoReq) (*UIDInfoRes, error)
	VidInfo(context.Context, *VidInfoReq) (*VIDInfoRes, error)
}

func RegisterVideoHomeServer(s *grpc.Server, srv VideoHomeServer) {
	s.RegisterService(&_VideoHome_serviceDesc, srv)
}

func _VideoHome_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoHomeServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.videoHome/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoHomeServer).List(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoHome_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoHomeServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.videoHome/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoHomeServer).Info(ctx, req.(*InfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoHome_UidInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UidInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoHomeServer).UidInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.videoHome/UidInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoHomeServer).UidInfo(ctx, req.(*UidInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _VideoHome_VidInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VidInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoHomeServer).VidInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.videoHome/VidInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoHomeServer).VidInfo(ctx, req.(*VidInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _VideoHome_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.videoHome",
	HandlerType: (*VideoHomeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _VideoHome_List_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _VideoHome_Info_Handler,
		},
		{
			MethodName: "UidInfo",
			Handler:    _VideoHome_UidInfo_Handler,
		},
		{
			MethodName: "VidInfo",
			Handler:    _VideoHome_VidInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "videoHome.proto",
}

func init() { proto.RegisterFile("videoHome.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 851 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0x41, 0x6f, 0xe3, 0x44,
	0x14, 0xc6, 0x49, 0x1c, 0x27, 0xcf, 0x6d, 0x76, 0x19, 0x42, 0x77, 0x1a, 0xb4, 0xdb, 0x60, 0x09,
	0x14, 0x81, 0x54, 0x89, 0x22, 0x71, 0x47, 0x44, 0x88, 0x4a, 0x1c, 0x56, 0xa6, 0x35, 0x07, 0x0e,
	0x96, 0x6b, 0xcf, 0x76, 0x47, 0x6a, 0x3c, 0xc6, 0x33, 0x4e, 0xd5, 0x5f, 0xc2, 0x0f, 0xe0, 0xcc,
	0x6f, 0xe2, 0xc8, 0xdf, 0x40, 0xef, 0xcd, 0x38, 0xb1, 0xb3, 0xab, 0x45, 0x95, 0xd8, 0xdb, 0xde,
	0xe6, 0x7d, 0xef, 0xf9, 0x9b, 0xf9, 0xbe, 0x37, 0x4f, 0x1e, 0x78, 0xb2, 0x95, 0x85, 0x50, 0x3f,
	0xa9, 0x8d, 0x38, 0xaf, 0x6a, 0x65, 0x14, 0x1b, 0x54, 0x37, 0xd1, 0x73, 0x08, 0x7e, 0x96, 0xda,
	0xc4, 0xe2, 0x77, 0xc6, 0x60, 0xb4, 0x95, 0x85, 0xe6, 0xde, 0x72, 0xb8, 0x1a, 0xc5, 0xb4, 0x8e,
	0xbe, 0x83, 0xe0, 0xb2, 0x7c, 0xa5, 0x30, 0xfd, 0x14, 0x86, 0x5b, 0x59, 0x70, 0x6f, 0xe9, 0xad,
	0x46, 0x31, 0x2e, 0xd9, 0x29, 0x8c, 0x37, 0x99, 0x36, 0xa2, 0xe6, 0x83, 0xa5, 0xb7, 0x9a, 0xc4,
	0x53, 0xa9, 0x53, 0x0b, 0x44, 0x2f, 0x00, 0xae, 0x65, 0xd1, 0xf9, 0xb4, 0x71, 0x9f, 0x1e, 0xc7,
	0xb8, 0xc4, 0x7c, 0xd2, 0xcb, 0xf7, 0xa9, 0xa3, 0xb4, 0x3d, 0x96, 0xc6, 0x63, 0xe5, 0xaa, 0x10,
	0x94, 0xf5, 0x63, 0x5a, 0xb3, 0x39, 0x04, 0x1b, 0xa1, 0x75, 0x76, 0x2b, 0x68, 0xeb, 0x69, 0x3c,
	0xdc, 0xe8, 0x5b, 0xf6, 0x15, 0x8c, 0x8a, 0xcc, 0x64, 0x7c, 0xb8, 0x1c, 0xae, 0xc2, 0x8b, 0x93,
	0xf3, 0xea, 0xe6, 0x3c, 0x41, 0xc9, 0xd7, 0xa5, 0x54, 0x25, 0xd2, 0xad, 0x33, 0x93, 0xc5, 0x54,
	0x13, 0xfd, 0xd6, 0x0a, 0x7b, 0xcc, 0x06, 0x5f, 0xee, 0x36, 0xf0, 0x56, 0xe1, 0x05, 0xeb, 0x6f,
	0xd0, 0x21, 0xff, 0x15, 0xe0, 0xfa, 0x72, 0xfd, 0x78, 0xfe, 0xb3, 0x1e, 0x7f, 0x88, 0xfc, 0xd7,
	0x97, 0xeb, 0x0e, 0xf1, 0x1f, 0x1e, 0x04, 0x0e, 0x61, 0x2f, 0x60, 0x5a, 0xaa, 0x58, 0xfc, 0xa0,
	0x9a, 0xd2, 0x38, 0x6b, 0xc3, 0x52, 0xa5, 0xb5, 0x48, 0x73, 0x84, 0xd8, 0xe7, 0x10, 0xd6, 0xa2,
	0xba, 0xcb, 0x1e, 0x6c, 0xc5, 0x80, 0x2a, 0x8e, 0x2c, 0xe4, 0x4a, 0x5c, 0x5f, 0x86, 0xbb, 0xbe,
	0xb0, 0x33, 0x80, 0xa6, 0xba, 0x53, 0x59, 0x71, 0x25, 0x37, 0x82, 0x8f, 0x2c, 0xab, 0x45, 0x52,
	0x23, 0x37, 0x82, 0x9d, 0xc0, 0x78, 0x4b, 0x1f, 0x73, 0x9f, 0x92, 0x2e, 0x42, 0xc9, 0xc9, 0xff,
	0x24, 0x39, 0xe9, 0x49, 0xfe, 0x67, 0x00, 0x81, 0x43, 0x88, 0x56, 0x16, 0xdf, 0x38, 0xb5, 0xb4,
	0x76, 0xd8, 0x85, 0xd3, 0x47, 0x6b, 0x36, 0x07, 0x3f, 0xc7, 0xd3, 0x3a, 0x65, 0x36, 0x60, 0xa7,
	0x10, 0x48, 0xfd, 0xa3, 0xac, 0xb5, 0x71, 0xc2, 0x26, 0x52, 0xa7, 0xaf, 0x30, 0x46, 0x2f, 0xa5,
	0x8e, 0xc5, 0xf7, 0x4d, 0x21, 0x5b, 0x61, 0xa1, 0xd4, 0xe8, 0x65, 0x86, 0x10, 0xfb, 0x0c, 0x26,
	0x98, 0x47, 0xeb, 0xf8, 0x98, 0xd2, 0x53, 0x4a, 0x23, 0x60, 0x79, 0x7f, 0x79, 0xad, 0x6a, 0xc3,
	0x83, 0x1d, 0xaf, 0xc6, 0x18, 0xed, 0x94, 0x3a, 0x11, 0xb5, 0x91, 0x79, 0x76, 0xc7, 0x27, 0x3b,
	0xe2, 0xad, 0x83, 0xd0, 0x4e, 0x6d, 0x32, 0xd3, 0x68, 0x3e, 0xb5, 0x76, 0xda, 0x08, 0x39, 0x8d,
	0xaa, 0x64, 0x7e, 0xb9, 0xe6, 0x60, 0x39, 0x29, 0x4c, 0x65, 0xd1, 0x36, 0x2d, 0xdc, 0x37, 0x6d,
	0x0e, 0x7e, 0x43, 0x72, 0x8f, 0xac, 0x5c, 0x0a, 0xd8, 0x73, 0x98, 0xd2, 0xc0, 0x5f, 0x3d, 0x54,
	0x82, 0x1f, 0x53, 0x06, 0x08, 0x48, 0xcd, 0x43, 0x25, 0xda, 0x99, 0x9b, 0xed, 0x67, 0xee, 0x6f,
	0x1f, 0x66, 0xfd, 0xeb, 0xfc, 0x96, 0x99, 0x6f, 0x5b, 0x30, 0x78, 0x4b, 0x0b, 0x86, 0x9d, 0x16,
	0xb8, 0x53, 0x8e, 0xf6, 0xa7, 0xdc, 0x4b, 0xf5, 0x7b, 0x52, 0x7b, 0xde, 0x8f, 0xdf, 0xed, 0x7d,
	0x70, 0xe8, 0xfd, 0x7f, 0x1a, 0xdc, 0x69, 0xce, 0xf4, 0xa0, 0x39, 0xef, 0xf0, 0xf8, 0x0c, 0x20,
	0xaf, 0x45, 0x66, 0x04, 0x8d, 0x81, 0xb5, 0x3a, 0xb4, 0x88, 0x1d, 0x03, 0x9a, 0x93, 0xa2, 0x2d,
	0x38, 0x6a, 0xe7, 0xa4, 0xd8, 0x15, 0x74, 0x2e, 0xdb, 0xf1, 0xc1, 0x65, 0xeb, 0x35, 0x66, 0xf6,
	0x46, 0x63, 0xe6, 0xe0, 0x1b, 0x69, 0xee, 0x04, 0x7f, 0x42, 0x53, 0x62, 0x03, 0x74, 0x81, 0x6a,
	0x5e, 0xca, 0x9c, 0x3f, 0xa5, 0x84, 0x25, 0x49, 0x2b, 0x99, 0xb3, 0x25, 0xc0, 0xbd, 0x4e, 0xda,
	0xf4, 0xc7, 0x94, 0x3e, 0xba, 0xd7, 0xe9, 0xbe, 0x62, 0x01, 0x93, 0x5c, 0x95, 0x46, 0x94, 0x46,
	0x73, 0x46, 0xf9, 0x5d, 0x8c, 0xe7, 0xc1, 0x23, 0xbf, 0x54, 0xb2, 0x34, 0xfc, 0x13, 0x4a, 0x02,
	0x02, 0x69, 0x85, 0x08, 0xfb, 0x02, 0x8e, 0x89, 0x67, 0xdd, 0xd4, 0x99, 0x91, 0xaa, 0xe4, 0xf3,
	0xa5, 0xb7, 0xf2, 0xe2, 0x99, 0x25, 0x2f, 0x1c, 0x8a, 0x8e, 0x98, 0xd7, 0xcd, 0xe6, 0x86, 0x8e,
	0xc1, 0x3f, 0x25, 0x9a, 0x90, 0x10, 0x7b, 0x0c, 0x2b, 0x5b, 0xdc, 0x5f, 0x21, 0xc4, 0x4f, 0xec,
	0x36, 0x08, 0xa4, 0x54, 0x84, 0xdf, 0xd3, 0x7e, 0x36, 0xff, 0xcc, 0x7e, 0x4f, 0x88, 0x2b, 0x60,
	0x30, 0x32, 0xd9, 0xad, 0xe6, 0x9c, 0x52, 0xb4, 0x66, 0xcf, 0x60, 0xbc, 0x15, 0x35, 0x8a, 0x3e,
	0x25, 0x34, 0xd8, 0x8a, 0x9a, 0xf4, 0xce, 0xc1, 0x17, 0x75, 0xad, 0x6a, 0xbe, 0xb0, 0x26, 0x52,
	0x10, 0xfd, 0xe9, 0x03, 0x7b, 0xf3, 0x8f, 0xf0, 0xe1, 0x96, 0x7f, 0xb8, 0xe5, 0x8f, 0xb8, 0xe5,
	0xef, 0xfb, 0x96, 0x5e, 0xfc, 0xe5, 0x39, 0xeb, 0xf0, 0xa9, 0xc6, 0x22, 0x18, 0xe1, 0x45, 0x65,
	0xf4, 0x6b, 0x74, 0x4f, 0xb5, 0x45, 0x27, 0xd0, 0xd1, 0x47, 0x58, 0x83, 0x7f, 0x5e, 0x5b, 0xe3,
	0x1e, 0x55, 0x8b, 0x4e, 0x80, 0x35, 0x5f, 0x43, 0xe0, 0x5e, 0x64, 0x6c, 0x46, 0x0f, 0x8b, 0xdd,
	0xf3, 0x6b, 0x31, 0x73, 0x0f, 0x8d, 0x5e, 0x71, 0xd2, 0x2d, 0x4e, 0x0e, 0x8a, 0x93, 0x4e, 0xf1,
	0xcd, 0x98, 0x5e, 0x93, 0xdf, 0xfe, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x0c, 0x9f, 0x26, 0x60,
	0x0a, 0x00, 0x00,
}
