// Code generated by protoc-gen-go. DO NOT EDIT.
// source: authorPage.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	authorPage.proto
	videoHome.proto

It has these top-level messages:
	CateListReq
	NumListReq
	ShowListVidReq
	ShowListVidForPlayReq
	ShowListReq
	GetVidListByUidReq
	CateListRes
	CateData
	NumListRes
	ShowListVidRes
	ShowListVidForPlayRes
	VideoUnionListForPlayData
	ShowListRes
	ShowListData
	ShowData
	GetvidListByUidRes
	ListReq
	InfoReq
	UidInfoReq
	VidInfoReq
	ListRes
	InfoRes
	UIDInfoRes
	UIDData
	VIDInfoRes
	VIDData
	VideoUnionData
	VideoUnionListData
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// catenewlist and catelist request type
type CateListReq struct {
	CateID uint32 `protobuf:"varint,1,opt,name=cateID,json=cateid" json:"cateID,omitempty"`
	Uid    uint32 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	Short  uint32 `protobuf:"varint,3,opt,name=short" json:"short,omitempty"`
	Offset uint32 `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Limit  uint32 `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
}

func (m *CateListReq) Reset()                    { *m = CateListReq{} }
func (m *CateListReq) String() string            { return proto.CompactTextString(m) }
func (*CateListReq) ProtoMessage()               {}
func (*CateListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CateListReq) GetCateID() uint32 {
	if m != nil {
		return m.CateID
	}
	return 0
}

func (m *CateListReq) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *CateListReq) GetShort() uint32 {
	if m != nil {
		return m.Short
	}
	return 0
}

func (m *CateListReq) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *CateListReq) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// numnewlist and numlist request type
type NumListReq struct {
	Uid    uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Offset uint32 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Limit  uint32 `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
}

func (m *NumListReq) Reset()                    { *m = NumListReq{} }
func (m *NumListReq) String() string            { return proto.CompactTextString(m) }
func (*NumListReq) ProtoMessage()               {}
func (*NumListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NumListReq) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *NumListReq) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *NumListReq) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// showlistvid request type
type ShowListVidReq struct {
	Uid      uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	ShowID   uint32 `protobuf:"varint,2,opt,name=showID,json=showId" json:"showID,omitempty"`
	ShowType uint32 `protobuf:"varint,3,opt,name=showType" json:"showType,omitempty"`
	Offset   uint32 `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Limit    uint32 `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
}

func (m *ShowListVidReq) Reset()                    { *m = ShowListVidReq{} }
func (m *ShowListVidReq) String() string            { return proto.CompactTextString(m) }
func (*ShowListVidReq) ProtoMessage()               {}
func (*ShowListVidReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ShowListVidReq) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ShowListVidReq) GetShowID() uint32 {
	if m != nil {
		return m.ShowID
	}
	return 0
}

func (m *ShowListVidReq) GetShowType() uint32 {
	if m != nil {
		return m.ShowType
	}
	return 0
}

func (m *ShowListVidReq) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ShowListVidReq) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// ShowListVidForPlayReq request type
type ShowListVidForPlayReq struct {
	Uid    uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	ShowID uint32 `protobuf:"varint,2,opt,name=showID,json=showId" json:"showID,omitempty"`
}

func (m *ShowListVidForPlayReq) Reset()                    { *m = ShowListVidForPlayReq{} }
func (m *ShowListVidForPlayReq) String() string            { return proto.CompactTextString(m) }
func (*ShowListVidForPlayReq) ProtoMessage()               {}
func (*ShowListVidForPlayReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ShowListVidForPlayReq) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ShowListVidForPlayReq) GetShowID() uint32 {
	if m != nil {
		return m.ShowID
	}
	return 0
}

// ShowList request type
type ShowListReq struct {
	Uid    uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Offset uint32 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Limit  uint32 `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
}

func (m *ShowListReq) Reset()                    { *m = ShowListReq{} }
func (m *ShowListReq) String() string            { return proto.CompactTextString(m) }
func (*ShowListReq) ProtoMessage()               {}
func (*ShowListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ShowListReq) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ShowListReq) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ShowListReq) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// GetvidListByUid request type
type GetVidListByUidReq struct {
	Uid uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *GetVidListByUidReq) Reset()                    { *m = GetVidListByUidReq{} }
func (m *GetVidListByUidReq) String() string            { return proto.CompactTextString(m) }
func (*GetVidListByUidReq) ProtoMessage()               {}
func (*GetVidListByUidReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetVidListByUidReq) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// catenewlist and catelist responce
type CateListRes struct {
	Code    int32     `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message,json=msg" json:"message,omitempty"`
	Data    *CateData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *CateListRes) Reset()                    { *m = CateListRes{} }
func (m *CateListRes) String() string            { return proto.CompactTextString(m) }
func (*CateListRes) ProtoMessage()               {}
func (*CateListRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CateListRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CateListRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CateListRes) GetData() *CateData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CateData struct {
	CateList []uint32              `protobuf:"varint,1,rep,packed,name=cateList" json:"cateList,omitempty"`
	Count    uint32                `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	List     []*VideoUnionListData `protobuf:"bytes,3,rep,name=list" json:"list,omitempty"`
}

func (m *CateData) Reset()                    { *m = CateData{} }
func (m *CateData) String() string            { return proto.CompactTextString(m) }
func (*CateData) ProtoMessage()               {}
func (*CateData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CateData) GetCateList() []uint32 {
	if m != nil {
		return m.CateList
	}
	return nil
}

func (m *CateData) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CateData) GetList() []*VideoUnionListData {
	if m != nil {
		return m.List
	}
	return nil
}

// numnewlist and numlist responce type,data type is not repeated to stream it
type NumListRes struct {
	Code    int32                 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string                `protobuf:"bytes,2,opt,name=message,json=msg" json:"message,omitempty"`
	Data    []*VideoUnionListData `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
}

func (m *NumListRes) Reset()                    { *m = NumListRes{} }
func (m *NumListRes) String() string            { return proto.CompactTextString(m) }
func (*NumListRes) ProtoMessage()               {}
func (*NumListRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *NumListRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *NumListRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *NumListRes) GetData() []*VideoUnionListData {
	if m != nil {
		return m.Data
	}
	return nil
}

// showlistvid responce type
type ShowListVidRes struct {
	Code    int32                 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string                `protobuf:"bytes,2,opt,name=message,json=msg" json:"message,omitempty"`
	Data    []*VideoUnionListData `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
}

func (m *ShowListVidRes) Reset()                    { *m = ShowListVidRes{} }
func (m *ShowListVidRes) String() string            { return proto.CompactTextString(m) }
func (*ShowListVidRes) ProtoMessage()               {}
func (*ShowListVidRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ShowListVidRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ShowListVidRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ShowListVidRes) GetData() []*VideoUnionListData {
	if m != nil {
		return m.Data
	}
	return nil
}

// ShowListVidForPlayRes responce type
type ShowListVidForPlayRes struct {
	Code    int32                      `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,2,opt,name=message,json=msg" json:"message,omitempty"`
	Data    *VideoUnionListForPlayData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ShowListVidForPlayRes) Reset()                    { *m = ShowListVidForPlayRes{} }
func (m *ShowListVidForPlayRes) String() string            { return proto.CompactTextString(m) }
func (*ShowListVidForPlayRes) ProtoMessage()               {}
func (*ShowListVidForPlayRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ShowListVidForPlayRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ShowListVidForPlayRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ShowListVidForPlayRes) GetData() *VideoUnionListForPlayData {
	if m != nil {
		return m.Data
	}
	return nil
}

// showListVidForPlayRes 嵌套数据层
type VideoUnionListForPlayData struct {
	FanNum uint64                `protobuf:"varint,1,opt,name=fanNum" json:"fanNum,omitempty"`
	List   []*VideoUnionListData `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *VideoUnionListForPlayData) Reset()                    { *m = VideoUnionListForPlayData{} }
func (m *VideoUnionListForPlayData) String() string            { return proto.CompactTextString(m) }
func (*VideoUnionListForPlayData) ProtoMessage()               {}
func (*VideoUnionListForPlayData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *VideoUnionListForPlayData) GetFanNum() uint64 {
	if m != nil {
		return m.FanNum
	}
	return 0
}

func (m *VideoUnionListForPlayData) GetList() []*VideoUnionListData {
	if m != nil {
		return m.List
	}
	return nil
}

// ShowList responce type
type ShowListRes struct {
	Code    int32         `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,json=msg" json:"message,omitempty"`
	Data    *ShowListData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ShowListRes) Reset()                    { *m = ShowListRes{} }
func (m *ShowListRes) String() string            { return proto.CompactTextString(m) }
func (*ShowListRes) ProtoMessage()               {}
func (*ShowListRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ShowListRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ShowListRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ShowListRes) GetData() *ShowListData {
	if m != nil {
		return m.Data
	}
	return nil
}

type ShowListData struct {
	Count uint32      `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	List  []*ShowData `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *ShowListData) Reset()                    { *m = ShowListData{} }
func (m *ShowListData) String() string            { return proto.CompactTextString(m) }
func (*ShowListData) ProtoMessage()               {}
func (*ShowListData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ShowListData) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ShowListData) GetList() []*ShowData {
	if m != nil {
		return m.List
	}
	return nil
}

type ShowData struct {
	Uid       uint32                `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	ShowID    uint32                `protobuf:"varint,2,opt,name=showID" json:"showID,omitempty"`
	Title     string                `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	StartTime uint32                `protobuf:"varint,4,opt,name=startTime" json:"startTime,omitempty"`
	EndTime   uint32                `protobuf:"varint,5,opt,name=endTime" json:"endTime,omitempty"`
	ReNum     uint32                `protobuf:"varint,6,opt,name=reNum" json:"reNum,omitempty"`
	CutNum    uint32                `protobuf:"varint,7,opt,name=cutNum" json:"cutNum,omitempty"`
	FanNum    uint32                `protobuf:"varint,8,opt,name=fanNum,json=fanCut" json:"fanNum,omitempty"`
	Fuids     []uint32              `protobuf:"varint,9,rep,packed,name=fuids" json:"fuids,omitempty"`
	Replay    []*VideoUnionListData `protobuf:"bytes,10,rep,name=replay" json:"replay,omitempty"`
	Ucut      []*VideoUnionListData `protobuf:"bytes,11,rep,name=ucut" json:"ucut,omitempty"`
	Fcut      []*VideoUnionListData `protobuf:"bytes,12,rep,name=fcut" json:"fcut,omitempty"`
}

func (m *ShowData) Reset()                    { *m = ShowData{} }
func (m *ShowData) String() string            { return proto.CompactTextString(m) }
func (*ShowData) ProtoMessage()               {}
func (*ShowData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ShowData) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ShowData) GetShowID() uint32 {
	if m != nil {
		return m.ShowID
	}
	return 0
}

func (m *ShowData) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ShowData) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ShowData) GetEndTime() uint32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ShowData) GetReNum() uint32 {
	if m != nil {
		return m.ReNum
	}
	return 0
}

func (m *ShowData) GetCutNum() uint32 {
	if m != nil {
		return m.CutNum
	}
	return 0
}

func (m *ShowData) GetFanNum() uint32 {
	if m != nil {
		return m.FanNum
	}
	return 0
}

func (m *ShowData) GetFuids() []uint32 {
	if m != nil {
		return m.Fuids
	}
	return nil
}

func (m *ShowData) GetReplay() []*VideoUnionListData {
	if m != nil {
		return m.Replay
	}
	return nil
}

func (m *ShowData) GetUcut() []*VideoUnionListData {
	if m != nil {
		return m.Ucut
	}
	return nil
}

func (m *ShowData) GetFcut() []*VideoUnionListData {
	if m != nil {
		return m.Fcut
	}
	return nil
}

// Getvidlistbyuid responce type
type GetvidListByUidRes struct {
	Code    int32    `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,json=msg" json:"message,omitempty"`
	Data    []uint64 `protobuf:"varint,3,rep,packed,name=data" json:"data,omitempty"`
}

func (m *GetvidListByUidRes) Reset()                    { *m = GetvidListByUidRes{} }
func (m *GetvidListByUidRes) String() string            { return proto.CompactTextString(m) }
func (*GetvidListByUidRes) ProtoMessage()               {}
func (*GetvidListByUidRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *GetvidListByUidRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetvidListByUidRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetvidListByUidRes) GetData() []uint64 {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CateListReq)(nil), "pb.CateListReq")
	proto.RegisterType((*NumListReq)(nil), "pb.NumListReq")
	proto.RegisterType((*ShowListVidReq)(nil), "pb.ShowListVidReq")
	proto.RegisterType((*ShowListVidForPlayReq)(nil), "pb.ShowListVidForPlayReq")
	proto.RegisterType((*ShowListReq)(nil), "pb.ShowListReq")
	proto.RegisterType((*GetVidListByUidReq)(nil), "pb.GetVidListByUidReq")
	proto.RegisterType((*CateListRes)(nil), "pb.CateListRes")
	proto.RegisterType((*CateData)(nil), "pb.CateData")
	proto.RegisterType((*NumListRes)(nil), "pb.NumListRes")
	proto.RegisterType((*ShowListVidRes)(nil), "pb.ShowListVidRes")
	proto.RegisterType((*ShowListVidForPlayRes)(nil), "pb.ShowListVidForPlayRes")
	proto.RegisterType((*VideoUnionListForPlayData)(nil), "pb.VideoUnionListForPlayData")
	proto.RegisterType((*ShowListRes)(nil), "pb.ShowListRes")
	proto.RegisterType((*ShowListData)(nil), "pb.ShowListData")
	proto.RegisterType((*ShowData)(nil), "pb.ShowData")
	proto.RegisterType((*GetvidListByUidRes)(nil), "pb.GetvidListByUidRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AuthorPage service

type AuthorPageClient interface {
	CateNewList(ctx context.Context, in *CateListReq, opts ...grpc.CallOption) (*CateListRes, error)
	CateList(ctx context.Context, in *CateListReq, opts ...grpc.CallOption) (*CateListRes, error)
	NumNewList(ctx context.Context, in *NumListReq, opts ...grpc.CallOption) (*NumListRes, error)
	NumList(ctx context.Context, in *NumListReq, opts ...grpc.CallOption) (*NumListRes, error)
	ShowListVID(ctx context.Context, in *ShowListVidReq, opts ...grpc.CallOption) (*ShowListVidRes, error)
	ShowList(ctx context.Context, in *ShowListReq, opts ...grpc.CallOption) (*ShowListRes, error)
	GetvidListByUID(ctx context.Context, in *GetVidListByUidReq, opts ...grpc.CallOption) (*GetvidListByUidRes, error)
}

type authorPageClient struct {
	cc *grpc.ClientConn
}

func NewAuthorPageClient(cc *grpc.ClientConn) AuthorPageClient {
	return &authorPageClient{cc}
}

func (c *authorPageClient) CateNewList(ctx context.Context, in *CateListReq, opts ...grpc.CallOption) (*CateListRes, error) {
	out := new(CateListRes)
	err := grpc.Invoke(ctx, "/pb.authorPage/CateNewList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorPageClient) CateList(ctx context.Context, in *CateListReq, opts ...grpc.CallOption) (*CateListRes, error) {
	out := new(CateListRes)
	err := grpc.Invoke(ctx, "/pb.authorPage/CateList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorPageClient) NumNewList(ctx context.Context, in *NumListReq, opts ...grpc.CallOption) (*NumListRes, error) {
	out := new(NumListRes)
	err := grpc.Invoke(ctx, "/pb.authorPage/NumNewList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorPageClient) NumList(ctx context.Context, in *NumListReq, opts ...grpc.CallOption) (*NumListRes, error) {
	out := new(NumListRes)
	err := grpc.Invoke(ctx, "/pb.authorPage/NumList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorPageClient) ShowListVID(ctx context.Context, in *ShowListVidReq, opts ...grpc.CallOption) (*ShowListVidRes, error) {
	out := new(ShowListVidRes)
	err := grpc.Invoke(ctx, "/pb.authorPage/ShowListVID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorPageClient) ShowList(ctx context.Context, in *ShowListReq, opts ...grpc.CallOption) (*ShowListRes, error) {
	out := new(ShowListRes)
	err := grpc.Invoke(ctx, "/pb.authorPage/ShowList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorPageClient) GetvidListByUID(ctx context.Context, in *GetVidListByUidReq, opts ...grpc.CallOption) (*GetvidListByUidRes, error) {
	out := new(GetvidListByUidRes)
	err := grpc.Invoke(ctx, "/pb.authorPage/GetvidListByUID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthorPage service

type AuthorPageServer interface {
	CateNewList(context.Context, *CateListReq) (*CateListRes, error)
	CateList(context.Context, *CateListReq) (*CateListRes, error)
	NumNewList(context.Context, *NumListReq) (*NumListRes, error)
	NumList(context.Context, *NumListReq) (*NumListRes, error)
	ShowListVID(context.Context, *ShowListVidReq) (*ShowListVidRes, error)
	ShowList(context.Context, *ShowListReq) (*ShowListRes, error)
	GetvidListByUID(context.Context, *GetVidListByUidReq) (*GetvidListByUidRes, error)
}

func RegisterAuthorPageServer(s *grpc.Server, srv AuthorPageServer) {
	s.RegisterService(&_AuthorPage_serviceDesc, srv)
}

func _AuthorPage_CateNewList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CateListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorPageServer).CateNewList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authorPage/CateNewList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorPageServer).CateNewList(ctx, req.(*CateListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorPage_CateList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CateListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorPageServer).CateList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authorPage/CateList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorPageServer).CateList(ctx, req.(*CateListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorPage_NumNewList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NumListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorPageServer).NumNewList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authorPage/NumNewList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorPageServer).NumNewList(ctx, req.(*NumListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorPage_NumList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NumListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorPageServer).NumList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authorPage/NumList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorPageServer).NumList(ctx, req.(*NumListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorPage_ShowListVID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowListVidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorPageServer).ShowListVID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authorPage/ShowListVID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorPageServer).ShowListVID(ctx, req.(*ShowListVidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorPage_ShowList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorPageServer).ShowList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authorPage/ShowList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorPageServer).ShowList(ctx, req.(*ShowListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorPage_GetvidListByUID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVidListByUidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorPageServer).GetvidListByUID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authorPage/GetvidListByUID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorPageServer).GetvidListByUID(ctx, req.(*GetVidListByUidReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthorPage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.authorPage",
	HandlerType: (*AuthorPageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CateNewList",
			Handler:    _AuthorPage_CateNewList_Handler,
		},
		{
			MethodName: "CateList",
			Handler:    _AuthorPage_CateList_Handler,
		},
		{
			MethodName: "NumNewList",
			Handler:    _AuthorPage_NumNewList_Handler,
		},
		{
			MethodName: "NumList",
			Handler:    _AuthorPage_NumList_Handler,
		},
		{
			MethodName: "ShowListVID",
			Handler:    _AuthorPage_ShowListVID_Handler,
		},
		{
			MethodName: "ShowList",
			Handler:    _AuthorPage_ShowList_Handler,
		},
		{
			MethodName: "GetvidListByUID",
			Handler:    _AuthorPage_GetvidListByUID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authorPage.proto",
}

func init() { proto.RegisterFile("authorPage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 695 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x4f, 0x6b, 0xdb, 0x4e,
	0x10, 0x8d, 0x2d, 0xc7, 0x7f, 0xc6, 0xfe, 0x25, 0x61, 0xc9, 0x2f, 0xa8, 0xa2, 0x05, 0x23, 0x4a,
	0x09, 0x29, 0x18, 0x92, 0x1e, 0x7a, 0x6e, 0x63, 0xd2, 0x1a, 0xd2, 0x10, 0xd4, 0x24, 0xd0, 0x43,
	0x29, 0x6b, 0x6b, 0x15, 0x0b, 0x2c, 0xaf, 0x2b, 0xad, 0x12, 0x4c, 0xaf, 0xfd, 0xac, 0xfd, 0x10,
	0x3d, 0x95, 0xd9, 0x3f, 0xd1, 0xca, 0x49, 0x4c, 0x04, 0xed, 0x4d, 0x6f, 0xfc, 0xf6, 0xbd, 0x9d,
	0x9d, 0xd9, 0x59, 0xc3, 0x0e, 0xcd, 0xc5, 0x94, 0xa7, 0xe7, 0xf4, 0x9a, 0x0d, 0x16, 0x29, 0x17,
	0x9c, 0xd4, 0x17, 0x63, 0x6f, 0xfb, 0x26, 0x0e, 0x19, 0xff, 0xc8, 0x13, 0x1d, 0xf4, 0x7f, 0x40,
	0xf7, 0x98, 0x0a, 0x76, 0x1a, 0x67, 0x22, 0x60, 0xdf, 0xc9, 0x1e, 0x34, 0x27, 0x54, 0xb0, 0xd1,
	0xd0, 0xad, 0xf5, 0x6b, 0xfb, 0xff, 0x05, 0x12, 0xc5, 0x21, 0xd9, 0x01, 0x27, 0x8f, 0x43, 0xb7,
	0x2e, 0x83, 0xf8, 0x49, 0x76, 0x61, 0x33, 0x9b, 0xf2, 0x54, 0xb8, 0x8e, 0x8c, 0x29, 0x80, 0xeb,
	0x79, 0x14, 0x65, 0x4c, 0xb8, 0x0d, 0xb5, 0x5e, 0x21, 0x64, 0xcf, 0xe2, 0x24, 0x16, 0xee, 0xa6,
	0x62, 0x4b, 0xe0, 0x9f, 0x02, 0x9c, 0xe5, 0x89, 0xf1, 0xd6, 0x1e, 0xb5, 0xc2, 0xa3, 0x50, 0xab,
	0x3f, 0xac, 0xe6, 0xd8, 0x6a, 0x3f, 0x6b, 0xb0, 0xf5, 0x79, 0xca, 0x6f, 0x51, 0xef, 0x2a, 0x0e,
	0x1f, 0x95, 0xcc, 0xa6, 0xfc, 0x76, 0x34, 0x34, 0x92, 0x12, 0x85, 0xc4, 0x83, 0x36, 0x7e, 0x5d,
	0x2c, 0x17, 0x4c, 0xab, 0xde, 0xe1, 0x8a, 0x49, 0xbd, 0x83, 0xff, 0xad, 0x5d, 0x9c, 0xf0, 0xf4,
	0x7c, 0x46, 0x97, 0x95, 0x36, 0xe3, 0x7f, 0x82, 0xae, 0x91, 0xf8, 0x1b, 0x07, 0xf3, 0x0a, 0xc8,
	0x07, 0x86, 0x9b, 0x41, 0xc1, 0xf7, 0xcb, 0xcb, 0x47, 0xce, 0xc6, 0xff, 0x62, 0xf7, 0x42, 0x46,
	0x08, 0x34, 0x26, 0x3c, 0x64, 0x92, 0xb1, 0x19, 0xc8, 0x6f, 0xb2, 0x0b, 0xad, 0x84, 0x65, 0x19,
	0xbd, 0x66, 0xd2, 0xb9, 0x13, 0x38, 0x49, 0x76, 0x4d, 0xfa, 0xd0, 0x08, 0xa9, 0xa0, 0xd2, 0xb5,
	0x7b, 0xd4, 0x1b, 0x2c, 0xc6, 0x03, 0x14, 0x1a, 0x52, 0x41, 0x03, 0xf9, 0x8b, 0x3f, 0x85, 0xb6,
	0x89, 0xe0, 0x51, 0x4f, 0xb4, 0x8d, 0x5b, 0xeb, 0x3b, 0x78, 0xd4, 0x06, 0x63, 0x02, 0x13, 0x9e,
	0xcf, 0x4d, 0x5e, 0x0a, 0x90, 0x03, 0x68, 0xcc, 0x90, 0xed, 0xf4, 0x9d, 0xfd, 0xee, 0xd1, 0x1e,
	0xea, 0x5f, 0x61, 0x1f, 0x5f, 0xce, 0x63, 0x3e, 0xc7, 0x75, 0xca, 0x09, 0x39, 0xfe, 0xd8, 0xea,
	0xa9, 0x2a, 0x39, 0x1c, 0xdc, 0xe5, 0xb0, 0xd6, 0x43, 0x66, 0x13, 0xad, 0x34, 0xda, 0xbf, 0xf2,
	0x11, 0x0f, 0xb7, 0x52, 0x15, 0xbb, 0xc3, 0x52, 0x69, 0x5e, 0xdc, 0xb7, 0xd3, 0xaa, 0x96, 0xeb,
	0x37, 0x78, 0xf6, 0x28, 0x05, 0x3b, 0x2f, 0xa2, 0xf3, 0xb3, 0x3c, 0x91, 0xde, 0x8d, 0x40, 0xa3,
	0xbb, 0x12, 0xd5, 0x9f, 0x50, 0xa2, 0xaf, 0x76, 0x7b, 0x57, 0x49, 0xe6, 0x65, 0x29, 0x99, 0x1d,
	0x34, 0x31, 0x42, 0xd6, 0xfe, 0x4f, 0xa0, 0x67, 0x47, 0x8b, 0x9e, 0xaa, 0xd9, 0x3d, 0xd5, 0x2f,
	0x6d, 0xb8, 0x67, 0xb4, 0xac, 0x6d, 0xfe, 0xaa, 0x43, 0xdb, 0x84, 0x9e, 0x7c, 0x79, 0x87, 0x68,
	0x27, 0x62, 0x31, 0x53, 0x63, 0xa4, 0x13, 0x28, 0x40, 0x9e, 0x43, 0x27, 0x13, 0x34, 0x15, 0x17,
	0x71, 0xc2, 0xf4, 0x18, 0x29, 0x02, 0xc4, 0x85, 0x16, 0x9b, 0x87, 0xf2, 0x37, 0x35, 0x4b, 0x0c,
	0x44, 0xb5, 0x94, 0xe1, 0x71, 0x37, 0xd5, 0xe6, 0x25, 0x90, 0x63, 0x3a, 0x17, 0x18, 0x6e, 0xe9,
	0x31, 0x2d, 0x91, 0x55, 0x9d, 0xb6, 0x8a, 0x47, 0x74, 0x7e, 0x9c, 0xcb, 0x6b, 0x15, 0xe5, 0x71,
	0x98, 0xb9, 0x1d, 0x79, 0xdf, 0x14, 0x20, 0x03, 0x68, 0xa6, 0x6c, 0x31, 0xa3, 0x4b, 0x17, 0xd6,
	0x56, 0x4d, 0xb3, 0xb0, 0xc6, 0xf9, 0x24, 0x17, 0x6e, 0x77, 0x7d, 0x8d, 0x91, 0x83, 0xdc, 0x08,
	0xb9, 0xbd, 0xf5, 0x5c, 0xe4, 0xf8, 0x81, 0x9c, 0x4f, 0x37, 0xa5, 0xf9, 0x54, 0xa5, 0x2d, 0x88,
	0x75, 0xa5, 0x1a, 0xaa, 0x09, 0x8e, 0x7e, 0xd7, 0x01, 0x8a, 0x17, 0x90, 0x1c, 0xaa, 0xd1, 0x76,
	0xc6, 0x64, 0x5b, 0x90, 0x6d, 0x33, 0xa2, 0xf4, 0x88, 0xf5, 0x56, 0x02, 0x99, 0xbf, 0x41, 0x06,
	0x6a, 0x64, 0x55, 0xe0, 0xe3, 0xe0, 0x31, 0x0e, 0x5b, 0x48, 0x28, 0x1e, 0x37, 0xaf, 0x8c, 0x91,
	0xff, 0x1a, 0x5a, 0x1a, 0x3f, 0x81, 0xfc, 0xb6, 0xb8, 0x32, 0x57, 0xa3, 0x21, 0x21, 0x76, 0xeb,
	0xab, 0xb7, 0xce, 0xbb, 0x1f, 0xd3, 0x59, 0x98, 0x98, 0xca, 0xc2, 0x7a, 0x58, 0xbc, 0x95, 0x00,
	0xf2, 0x8f, 0x61, 0xbb, 0x54, 0x8b, 0xd1, 0x90, 0xc8, 0xe2, 0xdd, 0x7f, 0x40, 0x3c, 0x13, 0x5f,
	0x29, 0x9c, 0xbf, 0x31, 0x6e, 0xca, 0xff, 0x16, 0x6f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x15,
	0x82, 0x8c, 0xc3, 0x84, 0x08, 0x00, 0x00,
}
