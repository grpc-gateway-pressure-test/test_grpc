// Code generated by protoc-gen-go. DO NOT EDIT.
// source: live_barrage.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListReq struct {
	Rid                  uint32   `protobuf:"varint,1,opt,name=Rid,proto3" json:"Rid,omitempty"`
	Ts                   uint32   `protobuf:"varint,2,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Cnt                  uint32   `protobuf:"varint,3,opt,name=Cnt,proto3" json:"Cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReq) Reset()         { *m = ListReq{} }
func (m *ListReq) String() string { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()    {}
func (*ListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ae284a741c79cdd, []int{0}
}

func (m *ListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReq.Unmarshal(m, b)
}
func (m *ListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReq.Marshal(b, m, deterministic)
}
func (m *ListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReq.Merge(m, src)
}
func (m *ListReq) XXX_Size() int {
	return xxx_messageInfo_ListReq.Size(m)
}
func (m *ListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListReq proto.InternalMessageInfo

func (m *ListReq) GetRid() uint32 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *ListReq) GetTs() uint32 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *ListReq) GetCnt() uint32 {
	if m != nil {
		return m.Cnt
	}
	return 0
}

type ListRes struct {
	Ts                   uint32     `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Danmakus             []*Danmaku `protobuf:"bytes,2,rep,name=Danmakus,proto3" json:"Danmakus,omitempty"`
	Cnt                  int32      `protobuf:"varint,3,opt,name=Cnt,proto3" json:"Cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListRes) Reset()         { *m = ListRes{} }
func (m *ListRes) String() string { return proto.CompactTextString(m) }
func (*ListRes) ProtoMessage()    {}
func (*ListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ae284a741c79cdd, []int{1}
}

func (m *ListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRes.Unmarshal(m, b)
}
func (m *ListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRes.Marshal(b, m, deterministic)
}
func (m *ListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRes.Merge(m, src)
}
func (m *ListRes) XXX_Size() int {
	return xxx_messageInfo_ListRes.Size(m)
}
func (m *ListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListRes proto.InternalMessageInfo

func (m *ListRes) GetTs() uint32 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *ListRes) GetDanmakus() []*Danmaku {
	if m != nil {
		return m.Danmakus
	}
	return nil
}

func (m *ListRes) GetCnt() int32 {
	if m != nil {
		return m.Cnt
	}
	return 0
}

type Danmaku struct {
	Content              string   `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	Ct                   uint32   `protobuf:"varint,2,opt,name=Ct,proto3" json:"Ct,omitempty"`
	Did                  string   `protobuf:"bytes,3,opt,name=Did,proto3" json:"Did,omitempty"`
	Icon                 string   `protobuf:"bytes,4,opt,name=Icon,proto3" json:"Icon,omitempty"`
	IP                   string   `protobuf:"bytes,5,opt,name=IP,proto3" json:"IP,omitempty"`
	Nick                 string   `protobuf:"bytes,6,opt,name=Nick,proto3" json:"Nick,omitempty"`
	Pg                   uint32   `protobuf:"varint,7,opt,name=Pg,proto3" json:"Pg,omitempty"`
	Rg                   uint32   `protobuf:"varint,8,opt,name=Rg,proto3" json:"Rg,omitempty"`
	Rid                  uint32   `protobuf:"varint,9,opt,name=Rid,proto3" json:"Rid,omitempty"`
	Ts                   uint32   `protobuf:"varint,10,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Uid                  uint32   `protobuf:"varint,11,opt,name=Uid,proto3" json:"Uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Danmaku) Reset()         { *m = Danmaku{} }
func (m *Danmaku) String() string { return proto.CompactTextString(m) }
func (*Danmaku) ProtoMessage()    {}
func (*Danmaku) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ae284a741c79cdd, []int{2}
}

func (m *Danmaku) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Danmaku.Unmarshal(m, b)
}
func (m *Danmaku) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Danmaku.Marshal(b, m, deterministic)
}
func (m *Danmaku) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Danmaku.Merge(m, src)
}
func (m *Danmaku) XXX_Size() int {
	return xxx_messageInfo_Danmaku.Size(m)
}
func (m *Danmaku) XXX_DiscardUnknown() {
	xxx_messageInfo_Danmaku.DiscardUnknown(m)
}

var xxx_messageInfo_Danmaku proto.InternalMessageInfo

func (m *Danmaku) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Danmaku) GetCt() uint32 {
	if m != nil {
		return m.Ct
	}
	return 0
}

func (m *Danmaku) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *Danmaku) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *Danmaku) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *Danmaku) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *Danmaku) GetPg() uint32 {
	if m != nil {
		return m.Pg
	}
	return 0
}

func (m *Danmaku) GetRg() uint32 {
	if m != nil {
		return m.Rg
	}
	return 0
}

func (m *Danmaku) GetRid() uint32 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *Danmaku) GetTs() uint32 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Danmaku) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func init() {
	proto.RegisterType((*ListReq)(nil), "pb.ListReq")
	proto.RegisterType((*ListRes)(nil), "pb.ListRes")
	proto.RegisterType((*Danmaku)(nil), "pb.Danmaku")
}

func init() { proto.RegisterFile("live_barrage.proto", fileDescriptor_9ae284a741c79cdd) }

var fileDescriptor_9ae284a741c79cdd = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0x3f, 0x6f, 0x83, 0x30,
	0x10, 0xc5, 0xcb, 0x9f, 0x84, 0x70, 0x28, 0x55, 0xe5, 0xe9, 0xd4, 0xa9, 0x62, 0x69, 0x26, 0x86,
	0x64, 0xee, 0x44, 0x16, 0xa4, 0xaa, 0x42, 0x2e, 0x99, 0x2b, 0x08, 0x16, 0xb2, 0xd2, 0x1a, 0x0a,
	0x6e, 0xbe, 0x67, 0xbf, 0x51, 0x75, 0xb6, 0x89, 0x50, 0xb7, 0x7b, 0xcf, 0x3f, 0x3f, 0xf0, 0x3b,
	0x60, 0x9f, 0xf2, 0x2a, 0x3e, 0x9a, 0x7a, 0x1c, 0xeb, 0x4e, 0x64, 0xc3, 0xd8, 0xeb, 0x9e, 0xf9,
	0x43, 0x93, 0xbe, 0x40, 0xf4, 0x2a, 0x27, 0xcd, 0xc5, 0x37, 0x7b, 0x80, 0x80, 0xcb, 0x16, 0xbd,
	0x27, 0x6f, 0xb7, 0xe5, 0x34, 0xb2, 0x7b, 0xf0, 0xab, 0x09, 0x7d, 0x63, 0xf8, 0xd5, 0x44, 0x44,
	0xae, 0x34, 0x06, 0x96, 0xc8, 0x95, 0x4e, 0xab, 0xf9, 0xfa, 0xe4, 0x60, 0xef, 0x06, 0x3f, 0xc3,
	0xe6, 0x58, 0xab, 0xaf, 0xfa, 0xf2, 0x43, 0x11, 0xc1, 0x2e, 0xd9, 0x27, 0xd9, 0xd0, 0x64, 0xce,
	0xe3, 0xb7, 0xc3, 0x65, 0xea, 0xca, 0xa6, 0xfe, 0x7a, 0x10, 0xb9, 0x63, 0x86, 0x10, 0xe5, 0xbd,
	0xd2, 0x42, 0x69, 0x93, 0x1d, 0xf3, 0x59, 0xd2, 0x07, 0x73, 0x3d, 0xff, 0x5d, 0xae, 0x29, 0xe7,
	0x28, 0x5b, 0x93, 0x13, 0x73, 0x1a, 0x19, 0x83, 0xb0, 0x38, 0xf7, 0x0a, 0x43, 0x63, 0x99, 0x99,
	0x6e, 0x15, 0x25, 0xae, 0x8c, 0xe3, 0x17, 0x25, 0x31, 0x6f, 0xf2, 0x7c, 0xc1, 0xb5, 0x65, 0x68,
	0x26, 0xa6, 0xec, 0x30, 0xb2, 0xc9, 0x65, 0x47, 0x9a, 0x77, 0xb8, 0xb1, 0x9a, 0x77, 0x73, 0x53,
	0xf1, 0xff, 0xa6, 0x60, 0xd9, 0xd4, 0x49, 0xb6, 0x98, 0x58, 0xe2, 0x24, 0xdb, 0xfd, 0x01, 0xb6,
	0xee, 0x49, 0xef, 0x62, 0xbc, 0x8a, 0x91, 0xa5, 0x10, 0x52, 0x75, 0xcc, 0xb4, 0xe2, 0x76, 0xf0,
	0xb8, 0x10, 0x53, 0x7a, 0xd7, 0xac, 0xcd, 0xa2, 0x0e, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe4,
	0x45, 0x08, 0x32, 0xbe, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DanmakuServerClient is the client API for DanmakuServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DanmakuServerClient interface {
	List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListRes, error)
}

type danmakuServerClient struct {
	cc *grpc.ClientConn
}

func NewDanmakuServerClient(cc *grpc.ClientConn) DanmakuServerClient {
	return &danmakuServerClient{cc}
}

func (c *danmakuServerClient) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListRes, error) {
	out := new(ListRes)
	err := c.cc.Invoke(ctx, "/pb.DanmakuServer/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DanmakuServerServer is the server API for DanmakuServer service.
type DanmakuServerServer interface {
	List(context.Context, *ListReq) (*ListRes, error)
}

// UnimplementedDanmakuServerServer can be embedded to have forward compatible implementations.
type UnimplementedDanmakuServerServer struct {
}

func (*UnimplementedDanmakuServerServer) List(ctx context.Context, req *ListReq) (*ListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterDanmakuServerServer(s *grpc.Server, srv DanmakuServerServer) {
	s.RegisterService(&_DanmakuServer_serviceDesc, srv)
}

func _DanmakuServer_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DanmakuServerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DanmakuServer/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DanmakuServerServer).List(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _DanmakuServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.DanmakuServer",
	HandlerType: (*DanmakuServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _DanmakuServer_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "live_barrage.proto",
}
